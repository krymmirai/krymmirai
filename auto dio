getgenv().unit = "dio"
getgenv().id = "{02486fd5-e52c-472d-bc75-0dd3c0f39c14}" -- id for unit 1
repeat wait() until game:IsLoaded()


local function start() -- starts the game
if game:GetService("Workspace")["_wave_num"].Value < 1 then
game:GetService("ReplicatedStorage").endpoints.client_to_server.vote_start:InvokeServer()
end
end

local function place() -- place function if there is another erwin on the map
if game:GetService("Workspace")["_wave_num"].Value < getgenv().wavetolose then
for i, v in next, game:GetService("Workspace")["_UNITS"]:GetChildren() do
    if v.Name == getgenv().unit then
        local args = {
    [1] = v._stats.uuid.Value,
    [2] = CFrame.new(-2943.41 91.50 -694.61) * CFrame.Angles(0, -0, -0)
}

game:GetService("ReplicatedStorage").endpoints.client_to_server.spawn_unit:InvokeServer(unpack(args))
end
end
end
end

local function place2() 
    if game:GetService("Workspace")["_wave_num"].Value < getgenv().wavetolose then
          local args = {
      [1] = getgenv().id,
      [2] = CFrame.new(-2946.59 91.50 -694.21) * CFrame.Angles(0, -0, -0)
  }
  
  game:GetService("ReplicatedStorage").endpoints.client_to_server.spawn_unit:InvokeServer(unpack(args))
  end
  end

local function place3() 
  if game:GetService("Workspace")["_wave_num"].Value < getgenv().wavetolose then
        local args = {
    [1] = getgenv().id,
    [2] = CFrame.new(-2950.34 91.50 -693.87) * CFrame.Angles(0, -0, -0)
}

game:GetService("ReplicatedStorage").endpoints.client_to_server.spawn_unit:InvokeServer(unpack(args))
end
end


local function upgrade() -- Upgrades to upgrade 5 and auto upgrades lowest upgraded unit
for i, v in next, game:GetService("Workspace")["_UNITS"]:GetChildren() do
    if v.Name == getgenv().unit then
        if v._stats.upgrade.Value < 20 then 
local args = {
[1] = v
  }
game:GetService("ReplicatedStorage").endpoints.client_to_server.upgrade_unit_ingame:InvokeServer(unpack(args))
end
end
end
end

local function join() -- join teleporter
local args = {
    [1] = "_lobbytemplategreen6"
}

game:GetService("ReplicatedStorage").endpoints.client_to_server.request_join_lobby:InvokeServer(unpack(args))
end

local function Create() -- Creates the map
local args = {
    [1] = "_lobbytemplategreen6",
    [2] = "namek_infinite",
    [3] = true,
    [4] = "Hard"
}

game:GetService("ReplicatedStorage").endpoints.client_to_server.request_lock_level:InvokeServer(unpack(args))

end

local function start2() -- Starts the teleport
local args = {
    [1] = "_lobbytemplategreen6"
}

game:GetService("ReplicatedStorage").endpoints.client_to_server.request_start_game:InvokeServer(unpack(args))
end

local function sell()
if game:GetService("Workspace")["_wave_num"].Value > getgenv().wavetolose -1 then
  for i, v in next, game:GetService("Workspace")["_UNITS"]:GetChildren() do
  if v.Name == getgenv().unit then
local args = {
    [1] = v
}

game:GetService("ReplicatedStorage").endpoints.client_to_server.sell_unit_ingame:InvokeServer(unpack(args))
end
end
end
end
local function teleport() 
if game:GetService("Workspace")["_DATA"].GameFinished.Value == true then
task.wait(5)
webhook()
game:GetService("ReplicatedStorage").endpoints.client_to_server.teleport_back_to_lobby:InvokeServer()
end
end

if game.PlaceId == 8304191830 then
while true do
join()
task.wait(1)
Create()
task.wait(1)
start2()
task.wait()
WatermarkForIdiotYter()
task.wait(5)
end
elseif game.PlaceId == 8349889591 then
repeat wait() until game:IsLoaded()
task.wait(20) -- Waits for the game remotes to load (This is needed)
game.Players.LocalPlayer.PlayerGui.MessageGui.Enabled = false -- Removes the annoying error messages
_G.b = true 
wait(2640)
while _G.b do
    task.wait()
task.wait()
place()
place2()
place3()
place4()
upgrade()
start()
sell()
teleport()
end
end
